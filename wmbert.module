<?php

use Drupal\Core\Entity\Display\EntityFormDisplayInterface;
use Drupal\Core\Entity\EntityInterface;
use Drupal\Core\Field\BaseFieldDefinition;
use Drupal\Core\Field\Entity\BaseFieldOverride;
use Drupal\field\Entity\FieldConfig;

function wmbert_entity_presave(EntityInterface $entity): void
{
    if (!$entity instanceof EntityFormDisplayInterface) {
        return;
    }

    $entityTypeId = $entity->getTargetEntityTypeId();
    $bundle = $entity->getTargetBundle();
    $handler = sprintf('wmbert:%s', $entityTypeId);
    $fieldManager = Drupal::getContainer()->get('entity_field.manager');

    foreach ($entity->get('content') as $fieldName => $fieldDisplay) {
        if (!isset($fieldDisplay['type'], $fieldDisplay['settings'])) {
            continue;
        }

        if ($fieldDisplay['type'] !== 'wmbert') {
            continue;
        }

        /** @var FieldConfig[] $fieldDefinitions */
        $fieldDefinitions = $fieldManager->getFieldDefinitions($entityTypeId, $bundle);

        if (empty($fieldDefinitions[$fieldName])) {
            continue;
        }

        $fieldDefinition = $fieldDefinitions[$fieldName];

        if ($fieldDefinition->getSetting('handler') === $handler) {
            continue;
        }

        if ($fieldDefinition instanceof BaseFieldDefinition) {
            $fieldDefinition = BaseFieldOverride::loadByName($entityTypeId, $bundle, $fieldName)
                ?? BaseFieldOverride::createFromBaseFieldDefinition($fieldDefinition, $bundle);
        }

        $fieldDefinition->setSetting('handler', $handler);
        $fieldDefinition->save();
    }
}
